#ifndef __PEOPLEDET_PEOPLEDET_H
#define __PEOPLEDET_PEOPLEDET_H

#include <ros/ros.h>
#include <image_transport/image_transport.h>
#include <cv_bridge/cv_bridge.h>
#include <sensor_msgs/image_encodings.h>
#include <sensor_msgs/Image.h>
#include <opencv2/imgproc/imgproc.hpp>
#include <opencv2/highgui/highgui.hpp>
#include <opencv2/opencv.hpp>
#include <stdlib.h> 
#include <stdio.h>
using namespace std;

class ImageConverter
{
  protected:
   ros::NodeHandle nh_;   ///< ROS node handle
 
    
  public:
    vector<cv::Rect> oldfound;
    int times;
    double rx;
    double ry;
    cv::Mat pointCloud;
    ros::Subscriber color_sub_;
    ros::Subscriber depth_sub_;
    ros::Publisher image_pub_;
    ros::Publisher pause_pub_;
    ros::Publisher person_pub_;
    vector<float> descriptorVector;
    ImageConverter(): nh_("~"){};
    ~ImageConverter()
    {          
	nh_.shutdown();
    }
    

    void spin();
    void pcl(const sensor_msgs::Image::ConstPtr& msg);
    void pplDet(const sensor_msgs::Image::ConstPtr& msg);
};

#endif /* __PEOPLEDET_PEOPLEDET_H */